services:
  frontend:
    image: yeagerai/simulator-frontend:v0.3.1
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./examples:/app/src/assets/examples
    depends_on:
      - jsonrpc
    expose:
      - "${FRONTEND_PORT}"

  jsonrpc:
    image: yeagerai/simulator-jsonrpc:v0.3.1
    environment:
      - FLASK_SERVER_PORT=${RPCPORT}
      # TODO: remove this in production
      - PYTHONUNBUFFERED=1
      - RPCDEBUGPORT=${RPCDEBUGPORT}
    ports:
      - "${RPCPORT}:${RPCPORT}"
      - "${RPCDEBUGPORT}:${RPCDEBUGPORT}"
    volumes:
      - ./.env:/app/.env
      - ./backend:/app/backend
    depends_on:
      ollama:
        condition: service_started
      database-migration:
        condition: service_completed_successfully
    expose:
      - "${RPCPORT}"

  webrequest:
    image: yeagerai/simulator-webrequest:v0.3.1
    shm_size: 2gb
    volumes:
      - ./webrequest:/app/webrequest
    environment:
      - FLASK_SERVER_PORT=${WEBREQUESTPORT}
      # TODO: remove this in production
      - PYTHONUNBUFFERED=1
    expose:
      - "${WEBREQUESTPORT}"

  ollama:
    image: ollama/ollama:0.2.1
    ports:
      - 11434:11434
    volumes:
      - ./.ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always

  postgres:
    image: yeagerai/simulator-database:v0.3.1
    ports:
      - "${DBPORT}:5432"
    environment:
      - POSTGRES_USER=${DBUSER}
      - POSTGRES_PASSWORD=${DBPASSWORD}
      - POSTGRES_DB=${DBNAME}
    healthcheck:
      test: pg_isready -U ${DBUSER} -d ${DBNAME}
      interval: 10s
      timeout: 3s
      retries: 3

    # If you want your db to persist in dev
    #volumes:
    #  - "./data/postgres:/var/lib/postgresql/data"

  database-migration:
    image: yeagerai/simulator-database-migration:v0.3.1
    environment:
      - DB_URL=postgresql://${DBUSER}:${DBUSER}@postgres/${DBNAME}
    depends_on:
      postgres:
        condition: service_healthy
